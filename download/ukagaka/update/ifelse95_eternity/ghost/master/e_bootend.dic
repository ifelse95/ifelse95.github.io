OnFirstBoot //Dialogue when you first open the ghost
{
	FirstBootVars //Initialize all your variables at the very bottom!
	
	"\![enter,passivemode]"
	--
	if reference0 == 0 //Very first boot - this dialogue finishes over in nameteach.dic after the user gives their name, make sure you check there.
	{
		"\1\s[-1]\0\s[14]Z\w5z\w5z\w5z\w5z\w5z\w5z\w5.\w5.\w5.\w5\x\c...\w8\w8\w8\w8\0\s[0]\w8\w8\w8\w8\0\s[2]!!!\x\c\0\s[8]Oh shit...\w8\w8 Where am I...\w8\w8\0\s[2]\w8\w8\n\n[half]\0\s[3]Oh no...\w8 What do I do?\x\c\0\s[0]Uhm,\w8 hi there.\w8\w8\w8\w8 I must of partied too hard and fell asleep in someone's computer...\w8\w8\w8\n\n[half]That someone being you.\w8\0\s[1] How embarrassing!\x\c\0\s[16]N-\w5now,\w5 don't worry!!\w5 I'm not a virus!!\w8 I didn't look at your files or anything.\w8\w8\n\n[half]\0\s[8]I mean,\w5 even if I did,\w5 I wouldn't remember,\w5 anyways...\x\c\0\s[0]...\w8\0\s[8]You don't seem mad or alarmed?\w8\w8\w8\w8\n\n[half]...\w5\0\s[12]Let's be friends!!\x\cMy name is Eternity!\w5 What is your name?"
	}
	else //Reference0 is the number of times you've uninstalled the ghost, so this is if you're reinstalling them.
	{
		"\1\s[-1]\0\s[5]I'M BACK,\w5 BABEEEEEYYYYYYYYYY!!!\w8\w8\w8\w8\n\n[half]\s[1]Uhm,\w8 what was your name again?"
	}
	--
	"\![open,inputbox,OnNameTeach]\_l[-10000,-10000]\q[ ,VeryFirstBoot]\e"
	//Don't erase the \q tag there! That prevents the box from being closed or timing out before the user inputs their name. If you make significant changes to the first boot, you may want to erase that. There are bits of code that deal with this in mouse.dic and in etc.dic, use ctrl F to find them. IF THIS GIVES YOU ISSUES PLEASE LET ME KNOW, but I think it should be a lot better than the variable solution I had previously.
}

OnBoot //Normal booting
{
	BootVars //This sets variables you want to be set on a normal boot, like resetting the runtime. Again, make sure you set these up at the bottom.
	_timesince = FUNCTIONEX("saori/time_check.dll","how_many_days",lastclosed[0],lastclosed[1],lastclosed[2],0,0,0)
	_timesince *= -1 //Multiply it by -1 to get rid of the negative sign, or to add one if the user traveled back in time.
	"\1\s[-1]" //This line ensures the Kero character does not appear. Feel free to remove if you want a Kero.
	--
	if _timesince < 0 //If the user has changed their clock backwards
	{
		"\0\s[3]Ehh...\w8 The clock doesn't seem right...\e"
	}
	elseif "%(month)/%(day)" == birthday[1] //If you want to write dates as DD/MM, feel free to swap this around. Also, feel free to add any other holidays you like here. Some ideas would be April Fools, Christmas, Halloween, your character's birthday, etc.
	{
		"\0\s[5]Hey hey!! It's %(month) %(day)!! \w8Happy birthday, %(username)!!\e"
	}
	elseif _timesince >= 90 //At least 3 months have passed. Feel free to nix this whole section if you don't want it.
	{
		TimeBoot(_timesince)
	}
	else
	{
		NormalBoot
	}
}

TimeBoot //This will be called if it's been at least 3 months since you opened the ghost last.
{
	_timesince = _argv[0] //Days since opened ghost last
	
	//Add as many stages to this as you like. Just write the number of days you want. If you want this to happen earlier than 3 months, you can edit it in OnBoot.
	if _timesince >= 365 //A year
	{
		"\0\s[2]Oh!!\w8 Hey,\w5 you!\w8\w8\w8\w8\s[0]\n\n[half]It's been like...\w8 a year,\w5 since I last saw you.\e"
	}
	else
	{
		"\0\s[4]Wow...\w8\w8 It's been a while.\w8\w8 3 months?\w8 Maybe more?\w8\w8\w8\w8\n\n[half]\s[0]What have you been up to lately?\e"
	}
}

NormalBoot
{
	//These brackets will have a 50% chance of being called unless you add more ifs below.
	{
		"\0\s[8]You know what's fucked up?\w8\w8\s[3] Why is it called a hamburger when it's not even made of ham?!\w8\w8 It's beef!\w8\w8\w8\w8\s[0]\w8\w8\w8\w8\n\n[half]Anyways,\w5 how are you doing %(username)?\e"
		"\0\s[12]Hey hey hey!\e"
		"\0\s[6]♫ I feeeeeeeeeeeeeeeeeel faaaaaaaaaaaan\w5taaaaaaaaaa\w5stic~! ♫\w8\w8\w8\n\n[half]\s[12] ♫ Hey\w3 hey\w3 heeeeeeeeeeeeeeeeey\w3~ ♫\e"
	}
	//---
	if timeslot == "earlymorning"
	{
		"\0\s[3]Geez...\w5 Early bird gets the worm,\w5 huh?\e"
		"\0\s[0]Mornin'\e"
	}
	if timeslot == "morning"
	{
		"\0\s[0]Mornin'\e"
		"\0\s[5]Mornin',\w5 %(username)!\w5 What's the plan??\e"
	}
	if timeslot == "lunch"
	{
		"\0\s[6]Hmm...\w8 I could go for a .png file right about now...\e"
		"\0\s[8]Have you had lunch yet, %(username)??\e"
	}
	if timeslot == "afternoon"
	{
		"\0\s[12]Afternoon,\w5 %(username)!\e"
		"\0\s[0]Afternoon.\e"
	}
	if timeslot == "evening"
	{
		"\0\s[5]What's for dinner,\w5 %(username)?? \w8\n\n[half]Hopefully something yummy,\w5 like \_a[https://www.allrecipes.com/recipe/8095/black-forest-cake-i/]Black Forest Cake\_a!\e"
		"\0\s[6]Evenin'.\e"
	}
	if timeslot == "latenight"
	{
		"\0\s[0]It's getting late... \w8\w8\0\s[5]Perfect time to party!!\e"
		"\0\s[0]Whatcha up to at this hour, %(username)?\e"
	}
	if timeslot == "midnight"
	{
		"\0\s[5]IT'S MIDNIGHT, \w5BABEYYY!!!\w8\n\n[half]LET'S GET THIS PARTY STARTED!!!\e"
		"\0\s[12]Still up??\w8 What do you wanna do??\e"
	}
}

OnClose
{
	lastclosed = ("%(year)","%(month)","%(day)","%(hour)","%(minute)","%(second)") //This tracks the last time the ghost was closed.
	
	if runtime[1] >= 5 || runtime[0] > 0 //If the ghost has been open longer than 5 minutes.
	{
		//These brackets will have a 50% chance of being called unless you add more ifs below.
		{
			"\0\s[6]Catch ya later, %(username)!"
		}
		if timeslot == "earlymorning"
		{
			"\0\s[14]*Yaaawwwnn.\w8.\w8.\w8*\w8\w8 I'm going to bed."
		}
		if timeslot == "morning"
		{
			"\0\s[6]Alrighty,\w5 have a good mornin'!\w8 Seeya."
		}
		if timeslot == "lunch"
		{
			"\0\s[5]Remember to eat lunch if you haven't yet!!"
			"\0\s[0]Alright,\w5 see ya. \w8\w8...\w8\0\s[8]I'm gonna find me a good .png off of the web."
		}
		if timeslot == "afternoon"
		{
			"\0\s[0]I guess it's time for a siesta.\w8\w8 Seeya."
		}
		if timeslot == "evening"
		{
			"\0\s[0]Are you getting sleepy...?\w8\w8\0\s[6]I'm not!\w8 Have a good evening,\w5 %(username)."
 			"\0\s[4]Aw...\w8\0\s[6]Alrighty,\w5 have a good evening!"
		}
		if timeslot == "latenight"
		{
			"\0\s[4]O-\w5oh.\w8 You're going?? \w8\w8...\w5\0\s[0]Well,\w5 have a good night,\w5 %(username)!"
		}
		if timeslot == "midnight"
		{
			"\0\s[4]Ah...\w8\w8 I see.\w8\w8\n\n[half]\0\s[0]No worries.\w8 Goodnight."
		}
	}
	else //If the ghost has been open less than 5 minutes.
	{
		"\0\s[9]Eh? \w5That's all you wanted?\w8 Alrighty."
 		"\0\s[4]Getting rid of me so soon??\w8\w8 ...\w8\0\s[5]Just kidding!\w8 See ya, %(username)!"
	}
	--
	"\w8\w8\-\e"
}

OnWindowStateRestore //When you bring the ghost back up after minimizing it.
{
	"\0\s[5]Peek-a-boo!\e"
	"\0\s[12]Hi!\e"
	"\0\s[12]I'm here!\e"
	"\0\s[5]Heya!\e"
}

OnGhostChanging //Changing to another ghost.
{
	if reference0 == sakuraname //If reloading.
	{
		"\0\s[0]I'll be right back."
		"\0\s[0]BRB."
		--
		"\w8\w8\e" //Gives the user a moment to read the dialogue before they disappear
	}
	else
	{
		lastclosed = ("%(year)","%(month)","%(day)","%(hour)","%(minute)","%(second)") //Same as above, tracks when they were last closed.
		
		"\0\s[4]Aw,\w5 darn. \w8\w8Well,\w5\0\s[5] have fun with %(reference0)!\w8 Seeya!"
		"\0\s[16]Okay!\w8 Seeya,\w5 %(username)!\w5 Say hi to %(reference0) for me!"
		--
		"\w8\w8\e"
	}
}

OnGhostChanged //After switching.
{
	"\1\s[-1]\0\s[0]"
	--
	if reference0 == sakuraname //Finished reloading.
	{
		"I return.\e"
	}
	else
	{
		BootVars
		_timesince = FUNCTIONEX("saori/time_check.dll","how_many_days",lastclosed[0],lastclosed[1],lastclosed[2],0,0,0)
		_timesince *= -1
		
		if _timesince >= 90 //If it's been 3 months or more since you opened them, it'll do the 'wow it's been a long time' dialogue instead of switching dialogue. You can change this if you like!
		{
			TimeBoot(_timesince)
		}
		else //Switching to this ghost from another ghost
		{
			"\0\s[12]Seeya,\w5 %(reference0)!\w8\w8\w8\n\n[half]...\w8\0\s[6]Got bored with them and wanted to see me again, \w5huh?\e"
			"\0\s[6]Bye bye,\w5 %(reference0)!\w8\w8\n\n[half]\s[12]Hi hi,\w5 %(username)!\e"
		}
	}
}

OnShellChanging //Starting to change the shell
{
	"\![get,property,OnGetCoords,currentghost.scope(0).rect]" //This gets the current ghost coordinates so that they don't jump around the screen when they change shells
	--
	if reference0 == nowshell
	{
		"\0\s[8]...\w8\w8\w8\w8\s[0]I'm pretty sure I already look like that.\w8 But,\w5 okay."
	}
	elseif reference0 == "Default"
	{
		"\0\s[6]Back to the basics."
	}
	--
	"\w8\w8\e"
}

OnShellChanged //After the shell has changed
{
	"\1\s[-1]\0\![move,--X=%(shellchange[0]),--Y=%(shellchange[1]),--base=primaryscreen]" //Moves the ghost to where they were on the previous shell. You might want to get rid of this if your shells are drastically different. This also has the tags to hide the kero, remove them if you want.
	--
	if reference0 == nowshell //If the user switches to the shell they're already using
	{
		"\0\s[0]See?\w5 Nothing new.\e"
	}
	elseif reference0 == "Default"
	{
		"\0\s[12]Am I cute?\w8 Or am I cute?\e"
	}
	else
	{
		"\0\s[5]Tada!\e"
	}
	nowshell = reference0 //Sets nowshell to the new value
}

OnGetCoords //This gets the x and y coordinates when changing shells
{
	shellchange[0] = reference0[0]
	shellchange[1] = reference0[1]
}

//These are all the variables you want to set during a normal boot. So every time the ghost opens, we reset the timekeeping, whether the ghost has checked for updates, and if they've said anything yet.
BootVars
{
	lastTalk = ""
	runtime[0] = 0
	runtime[1] = 0
	runtime[2] = 0
	AutoUpdates[1] = 0
	mood = 0
	waitingcommuS = IARRAY
	waitingcommuM = IARRAY
}

//These are new variables to initialize after an update. By checking if the variable doesn't exist before initializing it, we prevent variables already in use from being overwritten. This is VERY IMPORTANT, or you risk resetting the user's progress on your new variables every time they update.
//ISVAR is a built in YAYA function that checks if a variable exists(is initialized) or not. It returns 0 if the variable doesn't exist, and 1 if it does.
UpdateVars
{
	//if ISVAR("examplevariable") == 0; examplevariable = 0
}

//These are all the variables that need to be initialized when the user first installs the ghost.
FirstBootVars
{
	lastTalk = ""
	runtime[0] = 0		//Hours, replaces passhour
	runtime[1] = 0		//Minutes, replaces passmin
	runtime[2] = 0		//Seconds, replaces passsec
	totalhours = 0		//Total number of hours the ghost has been run
	nowshell = "Default" //Make sure to change this if you change your shell name
	username = "Human"
	heshe = "they"
	himher = "them"
	hisher = "their"
	hesshes = "they're"
	birthday[0] = "???"	//The user's birthday, written out with words
	birthday[1] = "???"	//The user's birthday, written in DD/MM format
	talkrate = "every 5 minutes"
	aitalkinterval = 300
	totalpunches = 0
	nowscale = 100		//Current scale, as a percentage
	//---Petting related variables---
	stroke[0] = 0		//The stroke value, which resets after each pet
	stroke[1] = 0		//The stroke value, but it doesn't reset after each pet
	stroke[2] = 0		//The current streak of successful pets
	pethighscore[0] = 0	//The petting high score, as the number of the stroke value
	pethighscore[1] = 0	//The petting high score, as the number of pets
	totalpets = 0		//The total times the ghost has been pet
	offscreen = IARRAY
	//---
	deleteshitai = "Off"
	betaTester = "Off"
	AutoUpdates = ("On",0)
	trust = 0
	mood = 0
	sfxtoggle = "On"
	SeeNotepad = "Off"
	//nowmode = "Default" //Uncomment if you plan to add more modes
	installdate = ("%(year)","%(month)","%(day)","%(hour)","%(minute)","%(second)","%(ghostver)") //This tracks the exact day and time the ghost was installed, in case you want to mess around with that later. It also tracks what version the user installed, which may be helpful for debugging!
	waitingcommuS = IARRAY //These two arrays handle the non-interrupt system for communication. They're for storing messages from other ghosts when your ghost is busy talking.
	waitingcommuM = IARRAY
}